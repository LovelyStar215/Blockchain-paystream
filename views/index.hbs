<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8"/>
	<title>Auto-player instantiation example, single videoElement, using src attribute</title>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/dashjs/2.6.7/dash.all.debug.js"></script>
	<script src="http://code.jquery.com/jquery-3.3.1.min.js"></script>

	<style>
		video {
			width: 640px;
			height: 360px;
		}

		textarea {
			width: 500px;
			height: 360px;
			font-size: 10px;
		}

		input, select {
			background-color: orange;
		}
	</style>
</head>
<body>
<video controls id="videoPlayer"></video>
<div>
	<h3>Stream information</h3>
	<ul>
		<li>Client ID: <span id="clientId">?</span></li>
		<li>Shared secret: <span id="secret">?</span></li>
		<li>Client balance: <span id="client_xpr_balance">?</span> XRP</li>
		<li>Frame cost: <span id="frameCost">?</span> XRP</li>
		<li>Loaded frames: <span id="lastFrame">?</span></li>
	</ul>
</div>


<script>
	var url = "stream.mpd";
	var player;
	var frame = 0;
	var paymentInfo;

	$('document').ready(init);

	function init() {
		// Login to populate paymentInfo variable
		login()

		// Init player object
		player = dashjs.MediaPlayer().create();

		// Extend player XHR behavior
		player.extend("RequestModifier", () => {
					return {
						modifyRequestHeader: xhr => {
							// alter header to include unique token
							xhr.setRequestHeader('Pay-Token', window.clientId);
							return xhr;
						}
					};
				}, true);

		// Attach player to DOM
		player.initialize(document.querySelector("#videoPlayer"), url, true);

		// Disable dashjs debug output spam
		player.getDebug().setLogToBrowserConsole(false);

		// Attach event handler
		player.on('fragmentLoadingStarted', onFragmentLoadingStarted);

		player.pause();

		// Set this to a fairly high # of attempts: payment takes some time to process
		player.setFragmentLoaderRetryAttempts(15);

		// Set the time after which loading of failed frame should recommence
		player.setFragmentLoaderRetryInterval(3500);

		showClientXRPBalance();
	}

	function onFragmentLoadingStarted(e) {
		var request = e.request;
		// Only interested in video fragment requests
		if (request.mediaType === "video") {
			console.log('frame ' + frame);
			// Do something
			makePayment();
			$('#lastFrame').html(frame);
			frame = frame + 1;

		}
	}

	function login() {
		$.ajax('/login')
				.done(function (data) {
					paymentInfo = data;
					window.clientId = data.clientId;
					$('#clientId').html(data.clientId);
					$('#secret').html(data.sharedSecret);
					$('#frameCost').html(data.cost);
				});
	}

	function makePayment(amount) {
		if(paymentInfo) {

			// TODO Check hoeveel balance je hebt en bepaal of je een betaling doet. Betalen voor 5 payments vooruit
			$.ajax({
				url: 'http://' + paymentInfo.paymentProviderUri + '/PayFrame',
				data: {
					amount: paymentInfo.cost * 5,
					destination: paymentInfo.account + "." + paymentInfo.clientId,
					sharedSecret: paymentInfo.sharedSecret,
				}
			})
			.done(function (data) {
				if (!data.success) {
					player.pause();
				}
			})
			.fail(function (data) {

			})
			.always(function () {
			});
		}
	}

	function showClientXRPBalance() {
		if (!paymentInfo)
		{
			setTimeout(showClientXRPBalance, 1000)
			return
		}
		$.ajax('http://' + paymentInfo.paymentProviderUri + '/GetBalance')
		.done(function (data) {
			$('#client_xpr_balance').text(data.balance);
		})
		.fail(function(data) {
			console.log('Failed to get client XRP balance')
		})
		.always(function() {
			setTimeout(function() {
				showClientXRPBalance()
			}, 1000)
		})
	}
</script>
</body>
</html>

